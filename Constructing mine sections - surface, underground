#!/usr/bin/env python
# coding: utf-8

# In[1]:


# CSV data
csv_data = """
Drilling,Type,Capacity,Power,Section,SectionPlace,AreaDepth,AreaLength,AreaWidth #drlling
Drill1,Rotary,2000m,4500kW,Surface,East,200m,1000m,800m #section
Drill2,Hammer,1500m,3500kW,Surface,East,200m,1000m,800m
Truck1,Diesel,100t,5850HP,Surface,East,200m,10250m,400m
Truck2,Diesel,100t,5850HP,Surface,East,200m,10250m,400m
Loader1,Electrical,12yd3,2000kW,Underground,West,200m,12081m,400m
Loader2,Electrical,12yd3,2000kW,Underground,West,200m,10250m,400m
Loader3,Electrical,12yd3,2000kW,Underground,West,200m,10250m,400m
Loader4,Electrical,12yd3,2000kW,Underground,West,800m,500m,10m
"""
# Split CSV data into lines
lines = csv_data.strip().split('\n')
# Extract relevant information into dictionaries
drilling_data = {}
hauling_data = {}
construction_data = {}
for line in lines[1:]:  # Skip header
    fields = line.split(',')
    equipment_type = fields[0].strip()  # extracts the type of equipment
    if "Drill" in equipment_type:  # checks if drill equipment is present and if present extracts the data
        drilling_data[equipment_type] = {
            'capacity': fields[2].strip(),
            'power': fields[3].strip(),
            'section': fields[4].strip(),
            'section_place': fields[5].strip(),  # Include SectionPlace instead of Type
        }
    elif "Truck" in equipment_type:  # if truck data is present then it extracts truck data
        hauling_data[equipment_type] = {
            'capacity': fields[2].strip(),
            'power': fields[3].strip(),
            'section': fields[4].strip(),
            'section_place': fields[5].strip(),  # Include SectionPlace instead of Type
        }
    elif "Loader" in equipment_type:  # if loader data is present then it extracts truck data
        construction_data[equipment_type] = {
            'capacity': fields[2].strip(),
            'power': fields[3].strip(),
            'section': fields[4].strip(),
            'section_place': fields[5].strip(),  # Include SectionPlace instead of Type
        }
# Simulation function
def simulate_mine_operations(drilling_data, hauling_data, construction_data):
    for drill, drill_info in drilling_data.items():
        print(f"Simulating drilling with {drill} in {drill_info['section']} section - SectionPlace: {drill_info['section_place']}:")
        print(f"  Capacity: {drill_info['capacity']}, Power: {drill_info['power']}")
        # Simulate hauling after drilling
        for truck, truck_info in hauling_data.items():
            print(f"  Hauling with {truck} in {truck_info['section']} section - SectionPlace: {truck_info['section_place']}:")
            print(f"    Capacity: {truck_info['capacity']}, Power: {truck_info['power']}")
            # Simulate loading with loader
            for loader, loader_info in construction_data.items():
                print(f"    Constructing with {loader} in {loader_info['section']} section - SectionPlace: {loader_info['section_place']}:")
                print(f"      Capacity: {loader_info['capacity']}, Power: {loader_info['power']}")
                # Add any additional simulation logic as needed
                # Calculate costs or other metrics based on simulation
                print("\n")
# Run the simulation
simulate_mine_operations(drilling_data, hauling_data, construction_data)




# In[3]:


csv_data = """
Equipment,Type,Capacity,Power,Cost,Section,Type,Depth,Length,Width
Drill1,Rotary,2000m,4500kW,NA,East,Surface,200m,1000m,800m
Drill2,Hammer,1500m,3500kW,NA,East,Surface,200m,1000m,800m
Truck1,Diesel,100t,5850HP,NA,East,Surface,200m,10250m,400m
Truck1,Diesel,100t,5850HP,NA,East,Surface,200m,12080m,400m
Truck2,Diesel,100t,5850HP,NA,East,Surface,200m,10250m,400m
Loader1,Electrical,12yd3,2000kW,NA,West,Underground,200m,12081m,400m
Loader1,Electrical,12yd3,2000kW,NA,West,Underground,200m,10250m,400m
Loader1,Electrical,12yd3,2000kW,NA,West,Underground,200m,10250m,400m
Loader1,Electrical,12yd3,2000kW,NA,West,Underground,800m,500m,10m
"""
# Modify the extraction and simulation functions accordingly
def extract_data(lines):
    equipment_data = {}
    for line in lines[1:]:  # Skip header
        fields = line.split(',')
        equipment_type = fields[0].strip()
        if equipment_type not in equipment_data:
            equipment_data[equipment_type] = {
                'type': fields[1].strip(),
                'capacity': fields[2].strip(),
                'power': fields[3].strip(),
                'section': fields[5].strip(),
                'depth': fields[7].strip(),
                'length': fields[8].strip(),
                'width': fields[9].strip(),
            }
    return equipment_data
def simulate_mine_operations(drilling_data, hauling_data, construction_data):
    for drill, drill_info in drilling_data.items():
        print(f"Simulating drilling with {drill} in {drill_info['section']} section: {drill_info['depth']} depth, {drill_info['length']} length, {drill_info['width']} width.")
        # Simulate hauling after drilling
        for truck, truck_info in hauling_data.items():
            print(f"Hauling with {truck} in {truck_info['section']} section: {truck_info['length']} length, {truck_info['width']} width.")
            # Simulate loading with loader
            for loader, loader_info in construction_data.items():
                print(f"Constructing with {loader} in {loader_info['section']} section: {loader_info['length']} length, {loader_info['width']} width.")
                # Add any additional simulation logic as needed
                # Calculate costs or other metrics based on simulation
                print("\n")
# Run the modified simulation
lines = csv_data.strip().split('\n')
drilling_data = extract_data(lines)
hauling_data = extract_data(lines)
construction_data = extract_data(lines)
simulate_mine_operations(drilling_data, hauling_data, construction_data)



# In[ ]:




